.TH man 3 "10/11/2021" "1.00" "_printf man page
.SH NAME
.B _printf
- Formatted output conversion.
.SH SYNOPSIS
.B #include "main.h"

.B int _printf(const char *
.I format
.B , ...)
.SH DESCRIPTION
.B _printf()
Prints to standard output according to a 
.I format
string t - continue here -
.SH Return value
On successful return, these functions return the number of characters printed, excluding the null byte used to end output to strings.

If an output error is encountered, a negative value is returned.
.SH Format of the format string
The format string is composed of 0 or more directives (ordinary characters that are not %), which are copied to the output stream. The format string is also composed of conversion specifications, each of which result in fetching zero or more subsequent arguments. Each conversion specification is introduced by the character % and ends with the conversion specifier.
The argument must correspond properly with the conversion specifier. By default, the arguments are used in the order given.
.SH The conversion specifier
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.BR c
The int argument is converted to an unsigned char, then the resulting character is written
.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to a terminating null byte, but do ot include the terminating null byte.
.TP
.B d, i
The int argument is converted to signed decimal notation.
.TP
.B b
The unsigned int argument is converted to unsigned binary form(b).
.TP
.B r
Prints a string in reverse.
.TP
.B R
Prints a string converted to rot13
.TP
.B %
A '%' is written but no argument is converted. The complete version specification is '%%'
.SH EXAMPLE

#include "main.h"

_printf("%s, %s %d, %d\\n", weekday, month, 10, 1997);
.TP
Output: weekday, month, 10, 1997
.TP
_printf("%c%c%c%c\\n", h, o, l, a);
.TP
Output: hola
.TP
_printf("%% %i, decimal and %b binary", 100, 100);
.TP
Output: % 100, decimal and 1100100 binary
.TP
_printf("Hello in rot13 is:%R", Hello);
.TP
Output: Hello in rot13 is Ubyn
.TP
_printf("Hello reversed is:%r", Hello);
.TP
Output: Hello reversed is: olleH

.SH SEE ALSO
.I printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
Mateo Victorica, Santiago Goyret.
